# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=lisa-api
appUrl="http://localhost:9000"

include "backend.conf"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "com.codahale.metrics.MetricRegistry"
play.modules.enabled += "uk.gov.hmrc.lisaapi.LisaModule"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Uncomment below lines when previewing application.yaml file locally in case of CORS errors
# play.filters.enabled += "play.filters.cors.CORSFilter"
# play.filters.cors {
#   allowedOrigins = ["http://localhost:9680"]
# }

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.codahale.metrics.MetricRegistry = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

  uk.gov.hmrc.lisaapi.controllers.Documentation = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

api {
  context = "lifetime-isa"
  status = "RETIRED"
  statusv2 = "BETA"
  endpointsEnabled = false
  endpointsEnabledv2 = true
  access {
    type = "PUBLIC"
  }
  disabledEndpoints = []
}

microservice {
  services {

    auth {
      host=localhost
      port=8500
    }

    datastream {
      host = localhost
      port = 8100
    }
  }
}

desauthtoken = K1gbAD4vVreR0yoJmdd9bUp5RXwByLXfh
environment = local

wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}

Test.microservice.services.auth.host = localhost
Test.microservice.services.auth.port = 8500

microservice {
    services {
        des {
            protocol = http
            host = localhost
            port = 8883
            token = devToken
            serviceEnvironment = testEnv
        }
    }
}
