#%RAML 1.0
---

title: Lifetime ISA
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Testing the API
    content: !include documentation/testing-approach.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  IDtype:
    pattern: "^\\d{10}$"
  LISAManagerReferenceNumberType:
    pattern: "^Z([0-9]{4}|[0-9]{6})$"
  accountIdType:
    "pattern": "^[a-zA-Z0-9 :\\-]{1,20}$"

/lifetime-isa:
  /manager:
    description: This resource models the existence of a registered LISA Manager organisation.
      It is created by HMRC as a result of a LISA registration.  The registration process is not
      part of the API specification as it is a forms based process with manual verification by HMRC staff.

    /{lisaManagerReferenceNumber}:
      uriParameters:
        lisaManagerReferenceNumber:
          type : LISAManagerReferenceNumberType
          description: The number issued to the LISA provider upon successful LISA registration with HMRC.
          example: "Z1234"
      get:
                  is: [headers.acceptHeader]
                  displayName: Discover available endpoints
                  description: This allows LISA provider to discover all the available endpoints.
                  (annotations.scope): "read:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                  responses:
                    200:
                      body:
                        application/json:
                          type: !include schemas/LISAManager.get.schema.json
                          example: !include examples/LISAManager.get.json
                    404:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            ResourceNotFound:
                              description: Resource Not Found
                              value: |
                                {
                                  "code" : "NOT_FOUND",
                                  "message" : "Resource Not Found"
                                }
                    406:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            headerInvalid:
                              description: Accept header invalid
                              value: |
                                {
                                  "code" : "ACCEPT_HEADER_INVALID",
                                  "message" : "Accept header invalid"
                                }
                    500:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                           internalServerError :
                              description: Internal Server Error
                              value: |
                                {
                                  "code" : "INTERNAL_SERVER_ERROR",
                                  "message" : "Internal Server Error"
                                }


      /investors:
            post:
              is: [headers.acceptHeader, headers.contentHeader]
              displayName: Create a LISA investor
              description: !include documentation/LISAInvestor.post
              (annotations.scope): "write:lisa"
              securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
              (annotations.sandboxData): !include testdata/lisa-create-investor.md
              body:
                application/json:
                  example: !include examples/LISAInvestor.post.json
                  type: !include schemas/LISAInvestor.post.schema.json
              responses:
                201:
                  description: The LISA investor resource has been created.
                  headers:
                    Location:
                      description: Relative URI to the created LISAAccount resource.
                      type: string
                      example: /investors/0987654321
                  body:
                    application/json:
                      example: !include examples/LISAInvestor.post.response.json

                400:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: Bad Request
                          value: |
                            {
                              "code" : "BAD_REQUEST",
                              "message" : "Bad Request"
                            }
                401:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                          value: |
                            {
                              "code" : "UNAUTHORIZED",
                              "message" : "lisaManagerReferenceNumber is not authorised"
                            }
                403:
                  body:
                    application/json:
                      description: The investor details given do not match with HMRC’s records
                      type: !include schemas/ErrorCodes.schema.json
                      example: |
                        {
                          "code": "INVESTOR_NOT_FOUND",
                          "message": "The investor details given do not match with HMRC’s records."
                        }
                404:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        ResourceNotFound:
                          description: Resource Not Found
                          value: |
                            {
                              "code" : "NOT_FOUND",
                              "message" : "Resource Not Found"
                            }
                406:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        headerInvalid:
                          description: Accept header invalid
                          value: |
                            {
                              "code" : "ACCEPT_HEADER_INVALID",
                              "message" : "Accept header invalid"
                            }
                409:
                  description: Matches already existing resource.
                    Response contains a location header with link to the existing resource.
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        recordExists:
                          description: The investor already has a record with HMRC
                          value: |
                            {
                              "code" : "INVESTOR_ALREADY_EXISTS",
                              "message" : "The investor already has a record with HMRC."
                            }
                500:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                       internalServerError :
                          description: Internal Server Error
                          value: |
                            {
                              "code" : "INTERNAL_SERVER_ERROR",
                              "message" : "Internal Server Error"
                            }


      /accounts:
        description: !include documentation/LISAAccount
        post:
          is: [headers.acceptHeader, headers.contentHeader]
          description: !include documentation/LISAAccount
          displayName: Create or transfer a LISA account
          (annotations.scope): "write:lisa"
          securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
          (annotations.sandboxData): !include testdata/create-account.md
          body:
            application/json:
              type: !include schemas/LISAAccount.post.schema.json
              example: !include examples/LISAAccount.post.json
          responses:
            201:
              headers:
                Location:
                  description: URI to the created LISA account resource.
                  type: string
                  example: /lifetime-isa/manager/{lisaManagerReferenceNumber}/accounts/{accountID}
              body:
                application/json:
                  example: !include examples/LISAAccount.post.response.json
            400:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    badRequest:
                      description: Bad Request
                      value: |
                        {
                          "code" : "BAD_REQUEST",
                          "message" : "Bad Request"
                        }
            401:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    notOpenStatus:
                      description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                      value: |
                        {
                          "code" : "UNAUTHORIZED",
                          "message" : "lisaManagerReferenceNumber is not authorised"
                        }
            403:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    investorNotFound:
                      description: The investorID given does not match with HMRC’s records.
                      value: |
                        {
                          "code" : "INVESTOR_NOT_FOUND",
                          "message" : "invalid status: must create with open status"
                        }
                    outsideAgeRange:
                      description: The investor is not eligible for a LISA account.
                      value: |
                        {
                          "code" : "INVESTOR_ELIGIBILITY_CHECK_FAILED",
                          "message" : "Can't open a LISA if investor is older than 40 or younger than 18"
                         }
                    complianceFail:
                      description: The investor has failed a compliance check - they may have breached  ISA guidelines or regulations.
                      value: |
                        {
                          "code" : "INVESTOR_COMPLIANCE_CHECK_FAILED",
                          "message" : "The investor has failed a compliance check - they may have breached  ISA guidelines or regulations."
                        }
                    prevAccntDoNoExists:
                      description: The transferredFromAccountID and transferredFromLMRN given don’t match with an account on HMRC’s records.
                      value: |
                        {
                          "code" : "PREVIOUS_INVESTOR_ACCOUNT_DOES_NOT_EXIST",
                          "message" : "Previous Investor Account Doesn’t Exist"
                        }
                    noTransferAccntData:
                      description: transferredFromAccountID, transferedFromLMRN and transferInDate are required fields when the creationReason is "Transferred".
                      value: |
                        {
                          "code" : "TRANSFER_ACCOUNT_DATA_NOT_PROVIDED",
                          "message" : "transfer account data not provided"
                        }
                    transferAccntDataProvided:
                      description: transferredFromAccountID, transferedFromLMRN, and transferInDate fields should only be completed when the creationReason is "Transferred".
                      value: |
                        {
                          "code" : "TRANSFER_ACCOUNT_DATA_PROVIDED",
                          "message" : "transfer account data provided"
                        }
                    accountClosedOrVoided:
                      description: The LISA account has already been closed or voided.
                      value: |
                        {
                          "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                          "message": "The LISA account has already been closed or voided."
                        }

            404:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    ResourceNotFound:
                      description: Resource Not Found
                      value: |
                        {
                          "code" : "NOT_FOUND",
                          "message" : "Resource Not Found"
                        }
            406:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                    notOpenStatus:
                      description: Accept header invalid
                      value: |
                        {
                          "code" : "ACCEPT_HEADER_INVALID",
                          "message" : "Accept header invalid"
                        }

            409:
              body:
                application/json:
                  description: The LISA account already exists
                  type: !include schemas/ErrorCodes.schema.json
                  example: |
                    {
                      "code": "INVESTOR_ACCOUNT_ALREADY_EXISTS",
                      "message": "Investor Account Already Exists"
                    }
            500:
              body:
                application/json:
                  type: !include schemas/ErrorCodes.schema.json
                  examples:
                   internalServerError :
                      description: Internal Server Error
                      value: |
                        {
                          "code" : "INTERNAL_SERVER_ERROR",
                          "message" : "Internal Server Error"
                        }

        /{accountID}:
              uriParameters:
                accountID:
                  type: accountIdType
                  description: The ID for the account.  This will be generated by the LISAManager and will only
                    be unique when used in combination with lisaManagerReferenceNumber. Any special characters should be URL encoded.
                  example: "ABC12345"
              /close-account:
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Close an existing LISA account
                      description: Close an account and report the reason and date.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/close-account.md

                      body:
                        application/json:
                          type: !include schemas/LISAAccount.close.post.schema.json
                          example: !include examples/LISAAccount.close.post.json
                      responses:
                        200:
                          description: The account is updated successfully.
                          body:
                            application/json:
                              example: !include examples/LISAAccount.put.response.json

                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                badRequest:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }

                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountClosed:
                                  description: The LISA account is already closed.
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                      "message" : "The Investor Account is already closed"
                                    }

                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountIDNOTFound:
                                  description: The accountID given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountID given does not match with HMRC’s records."
                                    }
                                resourceNotFound:
                                  description: Resource Not Found
                                  value: |
                                    {
                                      "code" : "NOT_FOUND",
                                      "message" : "Resource Not Found"
                                    }
                        406:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                headerInvalid:
                                  description: Accept header invalid
                                  value: |
                                    {
                                      "code" : "ACCEPT_HEADER_INVALID",
                                      "message" : "Accept header invalid"
                                    }
                        500:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                               internalServerError :
                                  description: Internal Server Error
                                  value: |
                                    {
                                      "code" : "INTERNAL_SERVER_ERROR",
                                      "message" : "Internal Server Error"
                                    }

              /events:
                    description: !include documentation/LifeEvent
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Report a life event.
                      description: !include documentation/LifeEvent
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/life-event.md
                      body:
                        application/json:
                          type: !include schemas/LifeEvent.post.schema.json
                          example: !include examples/LifeEvent.post.json
                      responses:
                        201:
                          description: The LifeEvent resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created Life Event
                              type: string
                              example: /manager/Z654321/accounts/1234567890/events/3333333333
                          body:
                            application/json:
                                example: !include examples/LifeEvent.post.response.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }

                        403:
                          description: Matches already existing resource.
                            Response contains a location header with link to the existing resource.
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                lifeEventInvalid:
                                  description: The life event conflicts with previous life event reported.
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_INAPPROPRIATE",
                                      "message" : "The Life Event conflicts with previous Life Event reported."
                                    }
                                accountClosedOrVoided:
                                  description: The LISA account has already been closed or voided.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                                      "message": "The LISA account has already been closed or voided."
                                    }

                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountIDNOTFound:
                                  description: The accountID given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountID given does not match with HMRC’s records."
                                    }
                        409:
                          body:
                            application/json:
                              description: The investor’s life event has already been reported.
                              type: !include schemas/ErrorCodes.schema.json
                              example: |
                                {
                                      "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                      "message" : "The investor’s life event has already been reported."
                                }
                        500:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                               internalServerError :
                                  description: Internal Server Error
                                  value: |
                                    {
                                      "code" : "INTERNAL_SERVER_ERROR",
                                      "message" : "Internal Server Error"
                                    }

              /transactions:
                    description: !include documentation/LISATransaction
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Request a bonus payment
                      description: Request a bonus payment from HMRC and provide a reason for the request.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/bonus-payment.md
                      body:
                        application/json:
                          type: !include schemas/BonusPaymentRequest.post.schema.json
                          example: !include examples/BonusPaymentRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          headers:
                            Location:
                              description: Relative URI to the created LISA transaction resource
                              type: string
                              example: /manager/Z654321/accounts/1234567890/transactions/7777777777
                          body:
                            application/json:
                              example: !include examples/LISATransaction.post.response.json

                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                badRequest:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: The lisaManagerReferenceNumber path parameter you've used doesn't match with an authorised LISA provider in HMRC's records.
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber is not authorised"
                                    }

                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                lifeEventNotProvided:
                                  description: lifeEventID is required when the claimReason is "Life Event".
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_NOT_PROVIDED",
                                      "message" : "lifeEventID is required when the claimReason is \"Life Event\"."
                                    }
                                bonusWrong:
                                  description: The bonus information given exceeds the maximum annual amount, the qualifying deposits exceed the maximum annual amount, or the bonus claim doesn't equal the correct percentage of stated qualifying funds.
                                  value: |
                                    {
                                      "code" : "BONUS_CLAIM_ERROR",
                                      "message" : "Bonus Claim Error"
                                    }
                                accountClosedOrVoided:
                                  description: The LISA account has already been closed or voided.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED_OR_VOID",
                                      "message": "The LISA account has already been closed or voided."
                                    }

                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                noLifeEvent:
                                  description: The lifeEventID does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_NOT_FOUND",
                                      "message" : "The lifeEventID does not match with HMRC’s records."
                                    }
                                accountIDNOTFound:
                                  description: The accountID given does not match with HMRC’s records.
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountID given does not match with HMRC’s records."
                                    }
                                resourceNotFound:
                                  description: Resource Not Found
                                  value: |
                                    {
                                      "code" : "NOT_FOUND",
                                      "message" : "Resource Not Found"
                                    }
                        406:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                headerInvalid:
                                  description: Accept header invalid
                                  value: |
                                    {
                                      "code" : "ACCEPT_HEADER_INVALID",
                                      "message" : "Accept header invalid"
                                    }
                        500:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                               internalServerError :
                                  description: Internal Server Error
                                  value: |
                                    {
                                      "code" : "INTERNAL_SERVER_ERROR",
                                      "message" : "Internal Server Error"
                                    }
