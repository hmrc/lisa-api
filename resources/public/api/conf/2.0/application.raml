#%RAML 1.0
---

title: Lifetime ISA
version: 2.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk

documentation:
  - title: Overview
    content: !include documentation/overview.md
  - title: Save reference numbers
    content: !include documentation/reference-numbers.md
  - title: Versioning
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
  - title: Errors
    content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/errors.md
  - title: Testing
    content: !include documentation/testing.md

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml

mediaType: [ application/json, application/hal+json ]

types:
  IDtype:
    pattern: "^\\d{10}$"
  LISAManagerReferenceNumberType:
    pattern: "^Z([0-9]{4}|[0-9]{6})$"
  accountIdType:
    pattern: "^[a-zA-Z0-9 :/-]{1,20}$"
  transactionIdtype:
    pattern: "^\\d{1,10}$"
  ISO8601Date:
    pattern: "^\\d{4}-\\d{2}-\\d{2}$"

/lifetime-isa:
    /manager:
        description: This resource models the existence of a registered LISA Manager organisation.
                     It is created by HMRC as a result of a LISA registration.  The registration process is not
                     part of the API specification as it is a forms based process with manual verification by HMRC staff.
        /{lisaManagerReferenceNumber}:
            uriParameters:
              lisaManagerReferenceNumber:
               type : LISAManagerReferenceNumberType
               description: The reference given to the LISA provider when they applied for approval from HMRC.
               example: "Z1234"
            get:
              is: [headers.acceptHeader]
              displayName: Get a list of all available endpoints
              description: Use a LISA manager reference to get a list of all available endpoints.
              (annotations.scope): "read:lisa"
              securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
              (annotations.sandboxData): !include testdata/discover-endpoints.md
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/LISAManager.get.schema.json
                      example: !include examples/LISAManager.get.json
                400:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        InvalidLmrn:
                          description: lisaManagerReferenceNumber in the URL is in the wrong format
                          value: |
                            {
                              "code" : "BAD_REQUEST",
                              "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                            }
                401:
                  body:
                    application/json:
                      type: !include schemas/ErrorCodes.schema.json
                      examples:
                        notOpenStatus:
                          description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                          value: |
                            {
                              "code" : "UNAUTHORIZED",
                              "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                            }
            /investors:
              post:
                  is: [headers.acceptHeader, headers.contentHeader]
                  displayName: Create a LISA investor
                  description: !include documentation/LISAInvestor.post
                  (annotations.scope): "write:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                  (annotations.sandboxData): !include testdata/lisa-create-investor.md
                  body:
                    application/json:
                      example: !include examples/LISAInvestor.post.json
                      type: !include schemas/LISAInvestor.post.schema.json
                  responses:
                    201:
                      description: The LISA investor resource has been created.
                      body:
                        application/json:
                          example: !include examples/LISAInvestor.post.response.json
                          type: !include schemas/LISAInvestor.post.response.schema.json

                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            notOpenStatus:
                              description: Bad Request
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "Bad Request"
                                }
                            InvalidLmrn:
                              description: lisaManagerReferenceNumber in the URL is in the wrong format
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                }
                    401:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            notOpenStatus:
                              description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                              value: |
                                {
                                  "code" : "UNAUTHORIZED",
                                  "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                }
                    403:
                      body:
                        application/json:
                          description: The investor details given do not match with HMRC’s records
                          type: !include schemas/ErrorCodes.schema.json
                          example: |
                            {
                              "code": "INVESTOR_NOT_FOUND",
                              "message": "The investor details given do not match with HMRC’s records."
                            }
                    409:
                      description: Matches already existing resource.
                        Response contains a location header with link to the existing resource.
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            recordExists:
                              description: The investor already has a record with HMRC
                              value: |
                                {
                                  "code" : "INVESTOR_ALREADY_EXISTS",
                                  "message" : "The investor already has a record with HMRC."
                                }
            /accounts:
              (annotations.group):
                name: LISA accounts
                description: ""
              description: !include documentation/LISAAccount
              post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    description: !include documentation/LISAAccount
                    displayName: Create or transfer a LISA account
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/create-account.md
                    body:
                      application/json:
                        type: !include schemas/LISAAccount.post.schema.json
                        examples:
                          example-1: !include examples/LISAAccount.post.json
                          example-2: !include examples/LISAAccount.post1.json
                    responses:
                      201:
                        body:
                          application/json:
                            type: !include schemas/LISAAccount.post.response.schema.json
                            examples:
                              example-1: !include examples/LISAAccount.post.response.json
                              example-2: !include examples/LISAAccount.post.response1.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              badRequest:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              investorNotFound:
                                description: The investor details given do not match with HMRC’s records
                                value: |
                                  {
                                    "code" : "INVESTOR_NOT_FOUND",
                                    "message" : "invalid status: must create with open status"
                                  }
                              outsideAgeRange:
                                description: The investor is not eligible for a LISA account
                                value: |
                                  {
                                    "code" : "INVESTOR_ELIGIBILITY_CHECK_FAILED",
                                    "message" : "Can’t open a LISA if investor is older than 40 or younger than 18"
                                   }
                              complianceFail:
                                description: You cannot create or transfer a LISA account because the investor has failed a compliance check
                                value: |
                                  {
                                    "code" : "INVESTOR_COMPLIANCE_CHECK_FAILED",
                                    "message" : "You cannot create or transfer a LISA account because the investor has failed a compliance check"
                                  }
                              prevAccntDoNoExists:
                                description: The transferredFromAccountId and transferredFromLMRN given do not match an account on HMRC’s records
                                value: |
                                  {
                                    "code" : "PREVIOUS_INVESTOR_ACCOUNT_DOES_NOT_EXIST",
                                    "message" : "Previous Investor Account Doesn’t Exist"
                                  }
                              noTransferAccntData:
                                description: You must give a transferredFromAccountId, transferredFromLMRN and transferInDate when the creationReason is transferred, current or previous year funds transferred
                                value: |
                                  {
                                    "code" : "TRANSFER_ACCOUNT_DATA_NOT_PROVIDED",
                                    "message" : "transfer account data not provided"
                                  }
                              transferAccntDataProvided:
                                description: You must only give a transferredFromAccountId, transferredFromLMRN, and transferInDate when the creationReason is transferred, current or previous year funds transferred
                                value: |
                                  {
                                    "code" : "TRANSFER_ACCOUNT_DATA_PROVIDED",
                                    "message" : "transfer account data provided"
                                  }
                              accountClosed:
                                description: The LISA account is already closed
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message" : "The LISA account is already closed"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                    "message" : "The LISA account is already cancelled"
                                  }
                              accountVoid:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message" : "The LISA account is already void"
                                  }
                      409:
                        body:
                          application/json:
                            description: This investor already has a LISA account
                            type: !include schemas/ErrorCodes.schema.json
                            example: |
                              {
                                "code": "INVESTOR_ACCOUNT_ALREADY_EXISTS",
                                "message": "This investor already has a LISA account",
                                "accountId": "1234567890"
                              }
              /reinstate-account:
                post:
                  is: [headers.acceptHeader, headers.contentHeader]
                  displayName: Reinstate a LISA account
                  description: Re-open a LISA account that has been closed.
                  (annotations.scope): "write:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                  (annotations.sandboxData): !include testdata/reinstate-account.md
                  body:
                    application/json:
                      type: !include schemas/LISAAccount.reinstate.post.schema.json
                      examples:
                            example: !include examples/LISAAccount.reinstate.post.request.json
                  responses:
                    200:
                      description: The account is reinstated successfully.
                      body:
                        application/json:
                            type: !include schemas/LISAAccount.reinstate.post.response.schema.json
                            example: !include examples/LISAAccount.reinstate.post.response.json
                    400:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            InvalidPayload:
                              description: Bad Request
                              value: |
                                {
                                    "code": "BAD_REQUEST",
                                    "message": "Bad Request",
                                    "errors": [
                                        {
                                            "code": "INVALID_FORMAT",
                                            "message": "Invalid format has been used",
                                            "path": "/accountId"
                                        }
                                    ]
                                }
                            InvalidLmrn:
                              description: lisaManagerReferenceNumber in the URL is in the wrong format
                              value: |
                                {
                                  "code" : "BAD_REQUEST",
                                  "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                }
                    401:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            notOpenStatus:
                              description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                              value: |
                                {
                                  "code" : "UNAUTHORIZED",
                                  "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                }
                    404:
                      body:
                        application/json:
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            accountIdNOTFound:
                              description: The accountId does not match HMRC’s records
                              value: |
                                {
                                  "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                  "message": "The accountId does not match HMRC’s records"
                                }

                    403:
                      body:
                        application/json:
                          description:  Investor account may have been transferred or is active.
                          type: !include schemas/ErrorCodes.schema.json
                          examples:
                            accountClosed:
                              description: You cannot reinstate this account because it was closed with a closure reason of transferred out
                              value: |
                                {
                                  "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                  "message" : "You cannot reinstate this account because it was closed with a closure reason of transferred out"
                                }
                            accountClosedCancelled:
                              description: You cannot reinstate this account because it was closed with a closure reason of cancellation
                              value: |
                                {
                                  "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                  "message" : "You cannot reinstate this account because it was closed with a closure reason of cancellation"
                                }
                            accountVoided:
                              description: You cannot reinstate this account because it is already open
                              value: |
                                {
                                  "code" : "INVESTOR_ACCOUNT_ALREADY_OPEN",
                                  "message" : "You cannot reinstate this account because it is already open"
                                }
                            complianceFail:
                              description: You cannot reinstate this account because the investor has failed a compliance check
                              value: |
                                {
                                  "code" : "INVESTOR_COMPLIANCE_CHECK_FAILED",
                                  "message" : "You cannot reinstate this account because the investor has failed a compliance check"
                                }
              /{accountId}:
                uriParameters:
                  accountId:
                    type: accountIdType
                    description: The ID for the account.  This will be generated by the LISA Manager and will only
                      be unique when used in combination with lisaManagerReferenceNumber. Any special characters should be URL encoded.
                    example: "ABC12345"
                get:
                    displayName: Get account details
                    description: Use an account ID to get account details.
                    is: [headers.acceptHeader, headers.contentHeader]
                    (annotations.scope): "read:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/get-account.md
                    responses:
                      200:
                        body:
                          application/json:
                            type: !include schemas/LISAAccount.get.schema.json
                            examples:
                                example-1: !include examples/LISAAccount.get.json
                                example-2: !include examples/LISAAccount.get1.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                /close-account:
                  post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    displayName: Close an existing LISA account
                    description: Close an account and report the reason and date.
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/close-account.md
                    body:
                      application/json:
                        type: !include schemas/LISAAccount.close.post.schema.json
                        examples:
                              example-1: !include examples/LISAAccount.close.post.json
                              example-2: !include examples/LISAAccount.close.post1.json
                    responses:
                      200:
                        description: The account is updated successfully.
                        body:
                          application/json:
                              type: !include schemas/LISAAccount.close.post.response.schema.json
                              example: !include examples/LISAAccount.close.response.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              badRequest:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountVoid:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message": "The LISA account is already void"
                                  }
                              accountClosed:
                                description: The LISA account is already closed
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message": "The LISA account is already closed"
                                  }
                              accountCancellationPeriodExceeded:
                                description: You cannot close the account with cancellation as the reason because the cancellation period is over
                                value: |
                                  {
                                    "code": "CANCELLATION_PERIOD_EXCEEDED",
                                    "message": "You cannot close the account with cancellation as the reason because the cancellation period is over"
                                  }
                              accountWithinCancellationPeriod:
                                description: You cannot close the account with all funds withdrawn as the reason because it is within the cancellation period
                                value: |
                                  {
                                    "code": "ACCOUNT_WITHIN_CANCELLATION_PERIOD",
                                    "message": "You cannot close the account with all funds withdrawn as the reason because it is within the cancellation period"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                /update-subscription:
                  post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    displayName: Modify date of first subscription of a LISA account
                    description: Modify the date when the first deposit was paid after a LISA account was created.
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/subscription-update.md
                    body:
                      application/json:
                        type: !include schemas/LISAAccount.updateSubscription.post.schema.json
                        examples:
                              example-1: !include examples/LISAAccount.subscription.post.json
                    responses:
                      200:
                        description: The first Subscription is updated successfully.
                        body:
                          application/json:
                            type: !include schemas/LISAAccount.updateSubscription.post.response.schema.json
                            examples:
                              example-1: !include examples/LISAAccount.subscription.response.json
                              example-2: !include examples/LISAAccount.update.voided.subscription.response.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              badRequest:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountClosed:
                                description: The LISA account is already closed
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message" : "The LISA account is already closed"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message" : "The LISA account is already cancelled"
                                  }
                              accountVoided:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message" : "The LISA account is already void"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                /events:
                  (annotations.group):
                    name: Life events
                    description: ""
                  description: !include documentation/LifeEvent
                  post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    displayName: Report a death or terminal illness
                    description: !include documentation/LifeEvent
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/life-event.md
                    body:
                      application/json:
                        type: !include schemas/LifeEvent.post.schema.json
                        example: !include examples/LifeEvent.post.json
                    responses:
                      201:
                        description: The LifeEvent resource has been created.
                        body:
                          application/json:
                              type: !include schemas/LifeEvent.post.response.schema.json
                              example: !include examples/LifeEvent.post.response.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        description: Matches already existing resource.
                          Response contains a location header with link to the existing resource.
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              lifeEventInvalid:
                                description: The life event conflicts with a previous life event reported
                                value: |
                                  {
                                    "code" : "LIFE_EVENT_INAPPROPRIATE",
                                    "message" : "The life event conflicts with a previous life event reported"
                                  }
                              accountClosed:
                                description: The LISA account is already closed
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message" : "The LISA account is already closed"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message" : "The LISA account is already cancelled"
                                  }
                              accountVoided:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message" : "The LISA account is already void"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                      409:
                        body:
                          application/json:
                            description: The investor’s life event has already been reported
                            type: !include schemas/ErrorCodes.schema.json
                            example: |
                              {
                                    "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                    "message" : "The investor’s life event has already been reported"
                              }
                  /annual-returns:
                    post:
                      is: [headers.acceptHeader, headers.contentHeader]
                      displayName: Send an annual return of information
                      description: Report details to HMRC about LISA accounts you managed in the last tax year. You can also correct a previous return of information. You cannot send or correct a return of information if the investor account is cancelled or void.
                      (annotations.scope): "write:lisa"
                      (annotations.sandboxData): !include testdata/annual-return.md
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      body:
                        application/json:
                          type: !include schemas/AnnualReturn.post.schema.json
                          examples:
                              initial-return: !include examples/AnnualReturn.post.json
                              supersede-return: !include examples/AnnualReturnSuperseded.post.json
                      responses:
                        201:
                          description: The LifeEvent resource has been created.
                          body:
                            application/json:
                                type: !include schemas/AnnualReturn.post.response.schema.json
                                example: !include examples/AnnualReturn.post.response.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: Bad Request
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "Bad Request"
                                    }
                                InvalidLmrn:
                                  description: lisaManagerReferenceNumber in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                                InvalidAccountId:
                                  description: accountId in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "accountId in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                    }
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountVoid:
                                  description: The LISA account is already void
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                      "message" : "The LISA account is already void"
                                    }
                                accountCancelled:
                                  description: The LISA account is already cancelled
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                      "message" : "The LISA account is already cancelled"
                                    }
                                supersedingLifeEventMisMatchError:
                                  description: originalLifeEventId and the originalEventDate do not match the information in the original request
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_MISMATCH_ERROR",
                                      "message" : "originalLifeEventId and the originalEventDate do not match the information in the original request"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountIdNOTFound:
                                  description: The accountId does not match HMRC’s records
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountId does not match HMRC’s records"
                                    }
                        409:
                          body:
                            application/json:
                              description: The investor’s life event has already been reported
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                supersedingLifeEventAlreadySuperseded:
                                  description: This life event has already been superseded
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_ALREADY_SUPERSEDED",
                                      "message" : "This life event has already been superseded"
                                    }
                                lifeEventExists:
                                  description: The investor’s life event has already been reported
                                  value: |
                                    {
                                          "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                          "message" : "The investor’s life event has already been reported"
                                    }
                  /fund-releases:
                    post:
                      is: [headers.acceptHeader]
                      displayName: "Request the release of funds to buy a property"
                      description: Request the release of LISA funds to buy a property. You can also correct a request by changing the withdrawal amount or property purchase date. When you make a correction, you cannot change the property details or the conveyancer reference number.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/fund-release.md
                      body:
                        application/json:
                          type: !include schemas/FundReleaseRequest.post.schema.json
                          examples:
                            example-1: !include examples/FundReleaseRequest.post.json
                            example-2: !include examples/FundReleaseSupersededRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          body:
                            application/json:
                              type: !include schemas/FundRelease.post.response.schema.json
                              examples:
                                lifeEventCreated: !include examples/FundRelease.post.response.1.json
                                lifeEventSuperseded: !include examples/FundRelease.post.response.2.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                InvalidLmrn:
                                  description: lisaManagerReferenceNumber in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                                InvalidAccountId:
                                  description: accountId in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "accountId in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                    }
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountClosed:
                                  description: The LISA account is already closed
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                      "message" : "The LISA account is already closed"
                                    }
                                accountVoid:
                                  description: The LISA account is already void
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                      "message" : "The LISA account is already void"
                                    }
                                accountCancelled:
                                  description: The LISA account is already cancelled
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                      "message" : "The LISA account is already cancelled"
                                    }
                                complianceCheckNotOpenLongEnough:
                                  description: The account has not been open for long enough
                                  value: |
                                    {
                                      "code" : "COMPLIANCE_ERROR_ACCOUNT_NOT_OPEN_LONG_ENOUGH",
                                      "message" : "The account has not been open for long enough"
                                    }
                                complianceCheckOtherPurchase:
                                  description: Another property purchase is already recorded
                                  value: |
                                    {
                                      "code" : "COMPLIANCE_ERROR_OTHER_PURCHASE_ON_RECORD",
                                      "message" : "Another property purchase is already recorded"
                                    }
                                supersedingLifeEventMisMatchError:
                                  description: originalLifeEventId and the originalEventDate do not match the information in the original request
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_MISMATCH_ERROR",
                                      "message" : "originalLifeEventId and the originalEventDate do not match the information in the original request"
                                    }
                                invalidDataProvided:
                                  description: You can only change eventDate or withdrawalAmount when superseding a property purchase fund release
                                  value: |
                                    {
                                      "code" : "INVALID_DATA_PROVIDED",
                                      "message" : "You can only change eventDate or withdrawalAmount when superseding a property purchase fund release"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountNotFound:
                                  description: The accountId does not match HMRC’s records
                                  value : |
                                    {
                                      "code" : "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message" : "The accountId does not match HMRC’s records"
                                    }
                        409:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                supersedingLifeEventAlreadySuperseded:
                                  description: This life event has already been superseded
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_ALREADY_SUPERSEDED",
                                      "message" : "This life event has already been superseded"
                                    }
                                lifeEventExists:
                                   description: The investor’s life event has already been reported
                                   value: |
                                     {
                                       "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                       "message" : "The investor’s life event has already been reported"
                                     }
                  /purchase-extensions:
                    post:
                      is: [headers.acceptHeader]
                      displayName: "Request a property purchase extension"
                      description: Request an extension to your request to release funds to buy a property.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/fund-release-extension.md
                      body:
                        application/json:
                          type: !include schemas/FundReleaseExtensionRequest.post.schema.json
                          examples:
                            example-1: !include examples/FundReleaseExtensionRequest.post.json
                            example-2: !include examples/FundReleaseExtensionSupersededRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          body:
                            application/json:
                              type: !include schemas/Extension.post.response.schema.json
                              examples:
                                lifeEventCreated: !include examples/Extension.post.response.json
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountClosed:
                                  description: The LISA account is already closed
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                      "message" : "The LISA account is already closed"
                                    }
                                accountCancelled:
                                  description: The LISA account is already cancelled
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                      "message" : "The LISA account is already cancelled"
                                    }
                                accountVoid:
                                  description: The LISA account is already void
                                  value: |
                                    {
                                      "code" : "INVESTOR_ACCOUNT_ALREADY_VOID",
                                      "message" : "The LISA account is already void"
                                    }
                                extensionNotApproved:
                                  description: A first extension has not yet been approved
                                  value: |
                                    {
                                      "code" : "FIRST_EXTENSION_NOT_APPROVED",
                                      "message" : "A first extension has not yet been approved"
                                    }
                                firstExtensionAlreadyApproved:
                                  description: A first extension has already been approved
                                  value: |
                                    {
                                      "code" : "FIRST_EXTENSION_ALREADY_APPROVED",
                                      "message" : "A first extension has already been approved"
                                    }
                                secondExtensionAlreadyApproved:
                                  description: A second extension has already been approved
                                  value: |
                                    {
                                      "code" : "SECOND_EXTENSION_ALREADY_APPROVED",
                                      "message" : "A second extension has already been approved"
                                    }
                                supersedingLifeEventMisMatchError:
                                  description: originalLifeEventId and the originalEventDate do not match the information in the original request
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_MISMATCH_ERROR",
                                      "message" : "originalLifeEventId and the originalEventDate do not match the information in the original request"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountNotFound:
                                  description: The accountId does not match HMRC’s records
                                  value : |
                                    {
                                      "code" : "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message" : "The accountId does not match HMRC’s records"
                                    }
                                fundReleaseNotFound:
                                  description: The fundReleaseId does not match HMRC’s records
                                  value : |
                                    {
                                      "code" : "FUND_RELEASE_NOT_FOUND",
                                      "message" : "The fundReleaseId does not match HMRC’s records"
                                    }
                        409:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                lifeEventExists:
                                  description: The investor’s life event has already been requested
                                  value: |
                                    {
                                      "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                      "message" : "The investor’s life event has already been reported"
                                    }
                                fundReleaseLifeEventAlreadySuperseded:
                                  description: This fund release has already been superseded
                                  value: |
                                    {
                                      "code" : "FUND_RELEASE_SUPERSEDED",
                                      "message" : "This fund release has already been superseded"
                                    }
                                supersedingLifeEventAlreadySuperseded:
                                  description: This life event has already been superseded
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_ALREADY_SUPERSEDED",
                                      "message" : "This life event has already been superseded"
                                    }
                  /purchase-outcomes:
                    post:
                      is: [headers.acceptHeader]
                      displayName: "Report the outcome of a property purchase"
                      description: Report to HMRC if a property purchase was completed or failed.
                      (annotations.scope): "write:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/fund-release-outcome.md
                      body:
                        application/json:
                          type: !include schemas/FundReleaseOutcome.post.schema.json
                          examples:
                            example-1: !include examples/FundReleaseOutcomeRequest.post.json
                            example-2: !include examples/FundReleaseOutcomeSupersededRequest.post.json
                      responses:
                        201:
                          description: The LISA transaction resource has been created.
                          body:
                            application/json:
                              type: !include schemas/PurchaseOutcome.post.response.schema.json
                              examples:
                                lifeEventCreated: !include examples/PurchaseOutcome.post.response.json
                        403:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                mismatchError:
                                   description: originalLifeEventId and the originalEventDate do not match the information in the original request
                                   value: |
                                      {
                                        "code": "SUPERSEDED_LIFE_EVENT_MISMATCH_ERROR",
                                        "message": "originalLifeEventId and the originalEventDate do not match the information in the original request"
                                      }

                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                accountNotFound:
                                  description: The accountId does not match HMRC’s records
                                  value : |
                                    {
                                      "code" : "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message" : "The accountId does not match with HMRC’s records"
                                    }
                                fundReleaseNotFound:
                                  description: The fundReleaseId does not match HMRC’s records
                                  value: |
                                    {
                                      "code" : "FUND_RELEASE_NOT_FOUND",
                                      "message" : "The fundReleaseId does not match HMRC’s records"
                                    }
                        409:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                fundReleaseLifeEventAlreadySuperseded:
                                  description: This fund release has already been superseded
                                  value: |
                                    {
                                      "code" : "FUND_RELEASE_SUPERSEDED",
                                      "message" : "This fund release has already been superseded"
                                    }
                                supersedingLifeEventAlreadySuperseded:
                                  description: This life event has already been superseded
                                  value: |
                                    {
                                      "code" : "SUPERSEDED_LIFE_EVENT_ALREADY_SUPERSEDED",
                                      "message" : "This life event has already been superseded"
                                    }
                                lifeEventExists:
                                  description: The investor’s life event has already been reported
                                  value: |
                                    {
                                       "code" : "LIFE_EVENT_ALREADY_EXISTS",
                                       "message" : "The investor’s life event has already been reported"
                                    }
                  /{lifeEventId}:
                      uriParameters:
                        lifeEventId:
                          type: IDtype
                          description: The ID for the life event.
                          example: "1234567890"
                      get:
                        displayName: "View a life event"
                        description: View life event data that has been submitted to HMRC. You can view death and terminal illness, property purchase funds release, property purchase extension, property purchase outcome, and annual return of information.
                        is: [headers.acceptHeader, headers.contentHeader]
                        (annotations.scope): "read:lisa"
                        securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                        (annotations.sandboxData): !include testdata/get-life-event.md
                        responses:
                          200:
                            body:
                              application/json:
                                type: !include schemas/LifeEvent.get.array.schema.json
                                examples:
                                  ill: !include examples/LifeEvent.get.ill-health.array.json
                                  return: !include examples/LifeEvent.get.annual-return.array.json
                                  property: !include examples/LifeEvent.get.property-purchase.array.json
                          400:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  InvalidLmrn:
                                    description: lisaManagerReferenceNumber in the URL is in the wrong format
                                    value: |
                                      {
                                        "code" : "BAD_REQUEST",
                                        "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                      }
                                  InvalidAccountId:
                                    description: accountId in the URL is in the wrong format
                                    value: |
                                      {
                                        "code" : "BAD_REQUEST",
                                        "message" : "accountId in the URL is in the wrong format"
                                      }
                          401:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  notOpenStatus:
                                    description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                    value: |
                                      {
                                        "code" : "UNAUTHORIZED",
                                        "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                      }
                          404:
                            body:
                              application/json:
                                type: !include schemas/ErrorCodes.schema.json
                                examples:
                                  noTransaction:
                                    description: The lifeEventId does not match HMRC’s records
                                    value: |
                                      {
                                        "code" : "LIFE_EVENT_NOT_FOUND",
                                        "message" : "The lifeEventId does not match HMRC’s records"
                                      }
                                  accountIdNOTFound:
                                    description: The accountId does not match HMRC’s records
                                    value: |
                                      {
                                        "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                        "message": "The accountId does not match HMRC’s records"
                                      }
                /withdrawal-charges:
                  (annotations.group):
                    name: Withdrawal charges
                    description: ""
                  post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    displayName: "Report a withdrawal charge"
                    description: Tell HMRC that an investor has taken money out of a LISA account without an associated life event. You can also correct a previous withdrawal charge.
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/withdrawal-charge.md
                    body:
                      application/json:
                        type: !include schemas/WithdrawalCharge.post.schema.json
                        examples:
                          example-1: !include examples/WithdrawalCharge.post.json
                          example-2: !include examples/WithdrawalChargeSupersede.post.json
                    responses:
                      201:
                        description: The LISA transaction resource has been created.
                        body:
                          application/json:
                            type: !include schemas/WithdrawalCharge.post.response.schema.json
                            examples:
                              example-1: !include examples/WithdrawalCharge.post.response.json
                              example-2: !include examples/WithdrawalChargeLate.post.response.json
                              example-3: !include examples/WithdrawalChargeSupersede.post.response.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              badRequest:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              forbidden:
                                description: There is a problem with the request data
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "There is a problem with the request data"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                    "message": "The LISA account is already cancelled"
                                  }
                              accountVoid:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message": "The LISA account is already void"
                                  }
                              supersededMismatch:
                                description: originalTransactionId and the originalWithdrawalChargeAmount do not match the information in the original request
                                value: |
                                  {
                                    "code": "SUPERSEDED_WITHDRAWAL_CHARGE_ID_AMOUNT_MISMATCH",
                                    "message": "originalTransactionId and the originalWithdrawalChargeAmount do not match the information in the original request"
                                  }
                              alreadySuperseded:
                                description: This withdrawal charge has already been superseded
                                value: |
                                  {
                                    "code": "WITHDRAWAL_CHARGE_ALREADY_SUPERSEDED",
                                    "message": "This withdrawal charge has already been superseded"
                                  }
                              supersededOutcomeError:
                                description: The calculation from your superseded withdrawal charge is incorrect
                                value: |
                                  {
                                    "code": "SUPERSEDED_WITHDRAWAL_CHARGE_OUTCOME_ERROR",
                                    "message": "The calculation from your superseded withdrawal charge is incorrect"
                                  }
                              timescalesExceeded:
                                description: The timescale for reporting a withdrawal charge has passed. The claim period lasts for 6 years and 14 days
                                value: |
                                  {
                                    "code": "WITHDRAWAL_CHARGE_TIMESCALES_EXCEEDED",
                                    "message": "The timescale for reporting a withdrawal charge has passed. The claim period lasts for 6 years and 14 days"
                                  }
                              reportingError:
                                description: "The withdrawal charge does not equal 25% of the withdrawal amount"
                                value: |
                                  {
                                    "code": "WITHDRAWAL_REPORTING_ERROR",
                                    "message": "The withdrawal charge does not equal 25% of the withdrawal amount"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                      409:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              withdrawalChargeExists:
                                description: A withdrawal charge with these details has already been requested for this investor
                                value: |
                                  {
                                    "code": "WITHDRAWAL_CHARGE_ALREADY_EXISTS",
                                    "message": "A withdrawal charge with these details has already been requested for this investor"
                                  }
                  /{transactionId}:
                    uriParameters:
                      transactionId:
                        type: transactionIdtype
                        description: The ID for the transaction.
                        example: "1234567890"
                    get:
                      displayName: "Get details of a withdrawal charge"
                      description: Use an investor’s transaction ID to get a request for a withdrawal charge that has been submitted to HMRC.
                      is: [headers.acceptHeader, headers.contentHeader]
                      (annotations.scope): "read:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/withdrawal-charge-get.md
                      responses:
                        200:
                          body:
                            application/json:
                              type: !include schemas/WithdrawalCharge.get.schema.json
                              examples:
                                example: !include examples/WithdrawalCharge.get.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                InvalidLmrn:
                                  description: lisaManagerReferenceNumber in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                                InvalidAccountId:
                                  description: accountId in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "accountId in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                noTransaction:
                                  description: The transactionId does not match HMRC’s records
                                  value: |
                                    {
                                      "code" : "WITHDRAWAL_CHARGE_TRANSACTION_NOT_FOUND",
                                      "message" : "The transactionId does not match HMRC’s records"
                                    }
                                accountIdNOTFound:
                                  description: The accountId does not match HMRC’s records
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountId does not match HMRC’s records"
                                    }
                /transactions:
                  (annotations.group):
                    name: Bonus requests
                    description: ""
                  description: !include documentation/LISATransaction
                  post:
                    is: [headers.acceptHeader, headers.contentHeader]
                    displayName: Request a bonus payment
                    description: Request a bonus payment from HMRC and provide a reason for the request. You can also correct a bonus claim during or after the claim reporting period. You can repay any overpaid amounts to HMRC and receive additional payments from corrected claims.
                    (annotations.scope): "write:lisa"
                    securedBy: [ sec.oauth_2_0: { scopes: [ "write:lisa" ] } ]
                    (annotations.sandboxData): !include testdata/bonus-payment.md
                    body:
                      application/json:
                        type: !include schemas/BonusPaymentRequest.post.schema.json
                        examples:
                          example-1: !include examples/BonusPaymentRequest.post.json
                          example-2: !include examples/BonusPaymentsuperseded.post.json
                    responses:
                      201:
                        description: The LISA transaction resource has been created.
                        body:
                          application/json:
                            type: !include schemas/BonusPaymentRequest.post.response.schema.json
                            examples:
                              example-1: !include examples/LISATransaction.post.response.json
                              example-2: !include examples/LISATransaction.post.response.1.json
                              example-3: !include examples/LISATransactionSupersede.post.response.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              badRequest:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidAccountId:
                                description: accountId in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "accountId in the URL is in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              forbidden:
                                description: There is a problem with the request data
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "There is a problem with the request data"
                                  }
                              lifeEventNotProvided:
                                description: lifeEventId is required when the claimReason is a life event
                                value: |
                                  {
                                    "code" : "LIFE_EVENT_NOT_PROVIDED",
                                    "message" : "lifeEventId is required when the claimReason is a life event"
                                  }
                              bonusWrong:
                                description: The bonus amount given is above the maximum annual amount, or the qualifying deposits are above the maximum annual amount or the bonus claim does not equal the correct percentage of qualifying funds
                                value: |
                                  {
                                    "code" : "BONUS_CLAIM_ERROR",
                                    "message" : "The bonus amount given is above the maximum annual amount, or the qualifying deposits are above the maximum annual amount or the bonus claim does not equal the correct percentage of qualifying funds"
                                  }
                              accountClosed:
                                description: The LISA account is already closed
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message": "The LISA account is already closed"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_CLOSED",
                                    "message": "The LISA account is already cancelled"
                                  }
                              accountVoid:
                                description: The LISA account is already void
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_VOID",
                                    "message": "The LISA account is already void"
                                  }
                              accountCancelled:
                                description: The LISA account is already cancelled
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNT_ALREADY_CANCELLED",
                                    "message": "The LISA account is already cancelled"
                                  }
                              helpToBuyNotApplicable:
                                description: "Help to buy is only applicable for claims within the 2017-18 tax year"
                                value: |
                                  {
                                    "code": "HELP_TO_BUY_NOT_APPLICABLE",
                                    "message": "Help to buy is only applicable for claims within the 2017-18 tax year"
                                  }
                              bonusClaimTimescalesExceeded:
                                description: "The timescale for claiming a bonus has passed. The claim period lasts for 6 years and 14 days"
                                value: |
                                  {
                                    "code": "BONUS_CLAIM_TIMESCALES_EXCEEDED",
                                    "message": "The timescale for claiming a bonus has passed. The claim period lasts for 6 years and 14 days"
                                  }
                              supersededBonusClaimAmountMismatch:
                                description: "originalTransactionId and the originalBonusDueForPeriod amount do not match the information in the original bonus request"
                                value: |
                                  {
                                    "code": "SUPERSEDED_BONUS_CLAIM_AMOUNT_MISMATCH",
                                    "message": "originalTransactionId and the originalBonusDueForPeriod amount do not match the information in the original bonus request"
                                  }
                              supersededBonusRequestOutcomeError:
                                description: "The calculation from your superseded bonus claim is incorrect"
                                value: |
                                  {
                                    "code": "SUPERSEDED_BONUS_REQUEST_OUTCOME_ERROR",
                                    "message": "The calculation from your superseded bonus claim is incorrect"
                                  }
                              noSubscriptionsError:
                                description: "A bonus payment is not possible because the account has no subscriptions for that tax year"
                                value: |
                                  {
                                    "code": "ACCOUNT_ERROR_NO_SUBSCRIPTIONS_THIS_TAX_YEAR",
                                    "message": "A bonus payment is not possible because the account has no subscriptions for that tax year"
                                  }
                      404:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              noLifeEvent:
                                description: The lifeEventId does not match with HMRC’s records
                                value: |
                                  {
                                    "code" : "LIFE_EVENT_NOT_FOUND",
                                    "message" : "The lifeEventId does not match with HMRC’s records"
                                  }
                              accountIdNOTFound:
                                description: The accountId does not match HMRC’s records
                                value: |
                                  {
                                    "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                    "message": "The accountId does not match HMRC’s records"
                                  }
                      409:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                noLifeEvent:
                                  description: The investor’s bonus payment has already been requested.
                                  value: |
                                    {
                                      "code" : "BONUS_CLAIM_ALREADY_EXISTS",
                                      "message" : "The investor’s bonus payment has already been requested"
                                    }
                                bonusClaimAlreadySuperseded:
                                  description: "This bonus claim has already been superseded"
                                  value: |
                                    {
                                      "code" : "BONUS_CLAIM_ALREADY_SUPERSEDED",
                                      "message" : "This bonus claim has already been superseded"
                                    }
                  /{transactionId}:
                    uriParameters:
                      transactionId:
                        type: transactionIdtype
                        description: The ID for the transaction.
                        example: "1234567890"
                    get:
                      displayName: Get details of a bonus request
                      description: Use an investor’s transaction ID to get a request for a bonus payment that has been submitted to HMRC.
                      is: [headers.acceptHeader, headers.contentHeader]
                      (annotations.scope): "read:lisa"
                      securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                      (annotations.sandboxData): !include testdata/bonus-payment-get.md
                      responses:
                        200:
                          body:
                            application/json:
                              type: !include schemas/LISATransaction.get.response.schema.json
                              examples:
                                withHtb: !include examples/LISATransaction.get.response.json
                                withoutHtb: !include examples/LISATransaction.get.response.1.json
                                supersede: !include examples/LISATransaction.get.supersederesponse1.json
                        400:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                InvalidLmrn:
                                  description: lisaManagerReferenceNumber in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                    }
                                InvalidAccountId:
                                  description: accountId in the URL is in the wrong format
                                  value: |
                                    {
                                      "code" : "BAD_REQUEST",
                                      "message" : "accountId in the URL is in the wrong format"
                                    }
                        401:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                notOpenStatus:
                                  description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                  value: |
                                    {
                                      "code" : "UNAUTHORIZED",
                                      "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                    }
                        404:
                          body:
                            application/json:
                              type: !include schemas/ErrorCodes.schema.json
                              examples:
                                noTransaction:
                                  description: The transactionId does not match HMRC’s records
                                  value: |
                                    {
                                      "code" : "BONUS_PAYMENT_TRANSACTION_NOT_FOUND",
                                      "message" : "The transactionId does not match HMRC’s records"
                                    }
                                accountIdNOTFound:
                                  description: The accountId does not match HMRC’s records
                                  value: |
                                    {
                                      "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                      "message": "The accountId does not match HMRC’s records"
                                    }
                    /payments:
                      (annotations.group):
                         name: Payments and debts
                         description: ""
                      get:
                         displayName: Get the payment details for a bonus claim or withdrawal charge
                         description: Use an investor’s transaction ID to get payment details for a bonus claim or withdrawal charge, including when the amount is due to be paid or collected.
                         is: [headers.acceptHeader, headers.contentHeader]
                         (annotations.scope): "read:lisa"
                         securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                         (annotations.sandboxData): !include testdata/get-investor-payment.md
                         responses:
                           200:
                             body:
                               application/json:
                                 type: !include schemas/InvestorPayment.get.response.schema.json
                                 examples:
                                   paid: !include examples/InvestorPayment.get.response.2.json
                                   pending: !include examples/InvestorPayment.get.response.1.json
                           400:
                             body:
                               application/json:
                                 type: !include schemas/ErrorCodes.schema.json
                                 examples:
                                   InvalidLmrn:
                                     description: lisaManagerReferenceNumber in the URL is in the wrong format
                                     value: |
                                       {
                                         "code" : "BAD_REQUEST",
                                         "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                       }
                                   InvalidAccountId:
                                     description: accountId in the URL is in the wrong format
                                     value: |
                                       {
                                         "code" : "BAD_REQUEST",
                                         "message" : "accountId in the URL is in the wrong format"
                                       }
                           401:
                             body:
                               application/json:
                                 type: !include schemas/ErrorCodes.schema.json
                                 examples:
                                   notOpenStatus:
                                     description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                     value: |
                                       {
                                         "code" : "UNAUTHORIZED",
                                         "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                       }
                           404:
                             body:
                               application/json:
                                 type: !include schemas/ErrorCodes.schema.json
                                 examples:
                                   noTransaction:
                                     description: The transactionId does not match HMRC’s records
                                     value: |
                                       {
                                         "code" : "TRANSACTION_NOT_FOUND",
                                         "message" : "The transactionId does not match HMRC’s records"
                                       }
                                   accountIdNOTFound:
                                     description: The accountId does not match HMRC’s records
                                     value: |
                                       {
                                         "code": "INVESTOR_ACCOUNTID_NOT_FOUND",
                                         "message": "The accountId does not match HMRC’s records"
                                       }

            /payments:
              get:
                  is: [headers.acceptHeader]
                  displayName: Get a list of all payments and debts in a date range
                  description: Get a list of all pending and paid payments from HMRC and due and collected debts owed to HMRC in a specific date range.
                  (annotations.scope): "read:lisa"
                  securedBy: [ sec.oauth_2_0: { scopes: [ "read:lisa" ] } ]
                  (annotations.sandboxData): !include testdata/get-bulk-payment.md
                  queryParameters:
                    startDate:
                      type : ISO8601Date
                      description: The start date of the date range you want to search. This must be the 6th day of the month. This cannot be before 6 April 2017.
                      example: "2017-05-06"
                    endDate:
                      type : ISO8601Date
                      description: The end date of the date range you want to search. This must be the 5th day of the month. This cannot be in the future, before the startDate, or more than a year after the startDate.
                      example: "2017-06-05"
                  responses:
                      200:
                        body:
                          application/json:
                            type: !include schemas/LISAManager.payment.get.schema.json
                            example: !include examples/LISAManager.payment.get.json
                      400:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: Bad Request
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "Bad Request"
                                  }
                              InvalidLmrn:
                                description: lisaManagerReferenceNumber in the URL is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "lisaManagerReferenceNumber in the URL is in the wrong format"
                                  }
                              InvalidStartDate:
                                description: startDate is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "startDate is in the wrong format"
                                  }
                              InvalidEndDate:
                                description: endDate is in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "endDate is in the wrong format"
                                  }
                              InvalidStartAndEndDates:
                                description: startDate and endDate are in the wrong format
                                value: |
                                  {
                                    "code" : "BAD_REQUEST",
                                    "message" : "startDate and endDate are in the wrong format"
                                  }
                      401:
                        body:
                          application/json:
                            type: !include schemas/ErrorCodes.schema.json
                            examples:
                              notOpenStatus:
                                description: lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records
                                value: |
                                  {
                                    "code" : "UNAUTHORIZED",
                                    "message" : "lisaManagerReferenceNumber path parameter used does not match with an authorised LISA provider in HMRC’s records"
                                  }
                      403:
                        body:
                          application/json:
                            examples:
                              endDateInFutureStatus:
                                description: endDate cannot be in the future
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "endDate cannot be in the future"
                                  }
                              endDateBeforeStartStatus:
                                description: endDate cannot be before startDate
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "endDate cannot be before startDate"
                                  }
                              startDateBeforeAprilStatus:
                                description: startDate cannot be before 6 April 2017
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "startDate cannot be before 6 April 2017"
                                  }
                              endDateOverYearAfterStatus:
                                description: endDate cannot be more than a year after startDate
                                value: |
                                  {
                                    "code" : "FORBIDDEN",
                                    "message" : "endDate cannot be more than a year after startDate"
                                  }
                      404:
                        body:
                          application/json:
                            examples:
                              noTransactionsFound:
                                description: No payments or debts exist for this date range
                                value: |
                                  {
                                    "code": "TRANSACTION_NOT_FOUND",
                                    "message": "No payments or debts exist for this date range"
                                  }
